// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopWebAPITP3.Data;

#nullable disable

namespace ShopWebAPITP3.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<int>("IdTarjeta")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdTarjeta");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<int?>("TicketIdTicket")
                        .HasColumnType("integer");

                    b.HasKey("IdProducto");

                    b.HasIndex("TicketIdTicket");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Tarjeta", b =>
                {
                    b.Property<int>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTarjeta"));

                    b.Property<string>("Cvv")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("NumeroTarjeta")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Vencimiento")
                        .HasColumnType("text");

                    b.HasKey("IdTarjeta");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Ticket", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTicket"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int>("IdProducto")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("IdTicket");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdProducto");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Cliente", b =>
                {
                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Tarjeta", "Tarjeta")
                        .WithMany()
                        .HasForeignKey("IdTarjeta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Producto", b =>
                {
                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Ticket", null)
                        .WithMany("Productos")
                        .HasForeignKey("TicketIdTicket");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Ticket", b =>
                {
                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Ticket", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
