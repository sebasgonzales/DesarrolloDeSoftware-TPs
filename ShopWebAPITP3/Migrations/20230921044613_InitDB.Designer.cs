// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopWebAPITP3.Data;

#nullable disable

namespace ShopWebAPITP3.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20230921044613_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idCliente"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idProducto"));

                    b.Property<int?>("TicketidOrden")
                        .HasColumnType("integer");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("precio")
                        .HasColumnType("numeric");

                    b.HasKey("idProducto");

                    b.HasIndex("TicketidOrden");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Tarjeta", b =>
                {
                    b.Property<int>("idTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTarjeta"));

                    b.Property<string>("cvv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fechaCaducidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("numeroTarjeta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idTarjeta");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Ticket", b =>
                {
                    b.Property<int>("idOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idOrden"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("idOrden");

                    b.HasIndex("IdCliente");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.TicketXProducto", b =>
                {
                    b.Property<int>("idTicketXProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTicketXProducto"));

                    b.Property<int>("productoidProducto")
                        .HasColumnType("integer");

                    b.Property<int>("ticketidOrden")
                        .HasColumnType("integer");

                    b.HasKey("idTicketXProducto");

                    b.HasIndex("productoidProducto");

                    b.HasIndex("ticketidOrden");

                    b.ToTable("TicketXProductos");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Producto", b =>
                {
                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Ticket", null)
                        .WithMany("Productos")
                        .HasForeignKey("TicketidOrden");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Ticket", b =>
                {
                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.TicketXProducto", b =>
                {
                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoidProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopWebAPITP3.Data.ShopModels.Ticket", "ticket")
                        .WithMany()
                        .HasForeignKey("ticketidOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("ticket");
                });

            modelBuilder.Entity("ShopWebAPITP3.Data.ShopModels.Ticket", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
